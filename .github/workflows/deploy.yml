name: Deploy Euler Studio

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install dependencies
      run: |
        npm ci

    - name: Build Angular app
      run: |
        npm run build

    - name: Optimize and compress build for deployment
      run: |
        # Remove source maps to reduce transfer size
        find dist/euler-studio/browser -name "*.map" -delete

        # Create compressed archive
        cd dist/euler-studio/browser
        tar -czf ../../../euler-studio-build.tar.gz .
        cd ../../..

        # Show sizes for comparison
        echo "Original build size:"
        du -sh dist/euler-studio/browser
        echo "Compressed archive size:"
        du -sh euler-studio-build.tar.gz

    - name: Prepare deployment directory
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Create directory if it doesn't exist
          sudo mkdir -p /var/www/euler.id

          # Temporarily give deployment user ownership for sync
          sudo chown -R $USER:$USER /var/www/euler.id
          sudo chmod -R 755 /var/www/euler.id

    - name: Clean and prepare staging directory
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Remove any existing staging directory to prevent accumulation
          rm -rf ~/staging/euler-studio

          # Create fresh staging directory
          mkdir -p ~/staging/euler-studio

    - name: Transfer compressed build
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "euler-studio-build.tar.gz"
        target: "~/staging/"
        overwrite: true

    - name: Extract and deploy to production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Extract compressed build to staging directory
          cd ~/staging
          tar -xzf euler-studio-build.tar.gz -C euler-studio/

          # Sync files from staging to production (preserves existing files, only updates changed ones)
          rsync -av --delete-after ~/staging/euler-studio/ /var/www/euler.id/

          # Clean up staging files
          rm -rf ~/staging/euler-studio
          rm -f ~/staging/euler-studio-build.tar.gz

          # Set proper web server ownership and permissions
          sudo chown -R www-data:www-data /var/www/euler.id/
          sudo chmod -R 755 /var/www/euler.id/
          sudo find /var/www/euler.id/ -type f -exec chmod 644 {} \;

          # Ensure service worker and manifest are accessible
          sudo chmod 644 /var/www/euler.id/ngsw.json || true
          sudo chmod 644 /var/www/euler.id/ngsw-worker.js || true
          sudo chmod 644 /var/www/euler.id/manifest.webmanifest || true
